install.packages("printr")
install.packages("printr")
install.packages("printr")
install.packages("printr")
install.packages("printr")
install.packages("Rcpp")
install(rnote)
install.packages("Rnote")
install.packages(printr)
install.packages("printr")
library(printr)
install.packages('printr')
sessionInfo()
censo <- read.table("http://www.ime.unicamp.br/~cnaber/censo.txt",header=T)
names(censo) = c("UF","Anos de Escolaridade","Renda Média")
media=data.frame(mean(censo$`Anos de Escolaridade`),mean(censo$`Renda Média`))
names(media)=c("Anos de Escolaridade","Renda Média")
se=data.frame(sd(censo$`Anos de Escolaridade`),sd(censo$`Renda Média`))
names(se)=c("Anos de Escolaridade","Renda Média")
quantis=data.frame(quantile(censo$`Anos de Escolaridade`),quantile(censo$`Renda Média`))
names(quantis)=c("Anos de Escolaridade","Renda Média")
summary(cars)
plot(pressure)
ajuste <- censo$`Anos de Escolaridade` - mean(censo$`Anos de Escolaridade`)
plot(ajuste,censo$`Renda Média`)
a=sum(censo$`Renda Média`)
b=sum((ajuste-mean(ajuste))^2)
beta_0 = mean(a*((1/nrow(censo))-mean(ajuste)*((ajuste-mean(ajuste))/b)))
beta_1= sum((censo$`Renda Média`)*(ajuste-mean(ajuste))/b)
w_0 = (1/nrow(censo))+((mean(ajuste)^2)*b)
w_1 = 1/b
sigma2 =(sum((ajuste-beta_0-beta_1*censo$`Anos de Escolaridade`)^2))/(nrow(censo)-2)
t=qt(0.975,24)
ic_beta_0 = beta_0+c(-1,1)*t*sqrt(sigma2*w_0)
ic_beta_1 = beta_1+c(-1,1)*t*sqrt(sigma2*w_1)
t_0=beta_0/sqrt(sigma2*w_0)
t_1=beta_1/sqrt(sigma2*w_1)
t_0 > t
t_1 > t
(p_valor_beta_0_1=c(pt(t_0,24),pt(t_1,24)))
(model <- lm((censo$`Renda Média`)~ajuste))
pred <- predict(model)
plot(ajuste,censo$`Renda Média`)
abline(model,col="red",lty = 3)
par(mfrow=c(1,1))
plot(censo$`Renda Média`,pred)
abline(model,col="red",lty = 3)
par(mfrow=c(2,2))
plot(model)
par(mfrow=c(1,1))
plot(censo$`Renda Média`,pred)
abline(model,col="red",lty = 3)
imoveis = read.table("http://www.ime.unicamp.br/~cnaber/imoveis.txt")
names(imoveis)=c("Imposto","Área_terreno","Área_construída","Idade","Preco_venda")
imoveis = read.table("http://www.ime.unicamp.br/~cnaber/imoveis.txt")
names(imoveis)=c("Imposto","Área_terreno","Área_construída","Idade","Preco_venda")
dif <- function(x){
diff(range(x))
}
medias = as.numeric(lapply(imoveis,mean))
se = as.numeric(lapply(imoveis,sd))
quantis = lapply(imoveis,quantile)
ampli = lapply(imoveis,dif)
(estats_desc=data.frame(medias,se,quantis,ampli))
x = matrix(data=c(rep(1,27),imoveis$Imposto,imoveis$Área_terreno,imoveis$Área_construída,imoveis$Idade),nrow=27,ncol=5)
library(MASS)
x = matrix(data=c(rep(1,27),imoveis$Imposto,imoveis$Área_terreno,imoveis$Área_construída,imoveis$Idade),nrow=27,ncol=5)
psi = ginv(t(x)%*%x)
beta=ginv(t(x)%*%x)%*%t(x)%*%imoveis$Preco_venda
identidade=diag((nrow(imoveis)))
sigma2 = (1/(nrow(imoveis)-4))*(t(imoveis$Preco_venda)%*%(identidade-x%*%ginv(t(x)%*%x)%*%t(x))%*%imoveis$Preco_venda)
t = qt(0.975,(nrow(imoveis)-4))
ic = function(beta,x){
psi = ginv(t(x)%*%x)
ics= numeric(2*nrow(psi))
j=1
for(i in seq(1,10,2)){
ics[i]=beta[j]-1*t*sqrt(sigma2*psi[j,j])
ics[i+1]=beta[j]+1*t*sqrt(sigma2*psi[j,j])
j=j+1
}
return(ics)
}
teste = function(beta){
ts= numeric(nrow(psi))
for(i in 1:nrow(psi)){
ts[i]=beta/sqrt(as.numeric(sigma2*(psi[i,i])))
}
return(ts)
}
tes = teste(beta)
tes < t
censo <- read.table("http://www.ime.unicamp.br/~cnaber/censo.txt",header=T)
names(censo) = c("UF","Anos de Escolaridade","Renda Média")
media=data.frame(mean(censo$`Anos de Escolaridade`),mean(censo$`Renda Média`))
names(media)=c("Anos de Escolaridade","Renda Média")
se=data.frame(sd(censo$`Anos de Escolaridade`),sd(censo$`Renda Média`))
names(se)=c("Anos de Escolaridade","Renda Média")
quantis=data.frame(quantile(censo$`Anos de Escolaridade`),quantile(censo$`Renda Média`))
names(quantis)=c("Anos de Escolaridade","Renda Média")
summary(cars)
plot(pressure)
ajuste <- censo$`Anos de Escolaridade` - mean(censo$`Anos de Escolaridade`)
plot(ajuste,censo$`Renda Média`)
a=sum(censo$`Renda Média`)
b=sum((ajuste-mean(ajuste))^2)
beta_0 = mean(a*((1/nrow(censo))-mean(ajuste)*((ajuste-mean(ajuste))/b)))
beta_1= sum((censo$`Renda Média`)*(ajuste-mean(ajuste))/b)
w_0 = (1/nrow(censo))+((mean(ajuste)^2)*b)
w_1 = 1/b
sigma2 =(sum((ajuste-beta_0-beta_1*censo$`Anos de Escolaridade`)^2))/(nrow(censo)-2)
t=qt(0.975,24)
ic_beta_0 = beta_0+c(-1,1)*t*sqrt(sigma2*w_0)
ic_beta_1 = beta_1+c(-1,1)*t*sqrt(sigma2*w_1)
t_0=beta_0/sqrt(sigma2*w_0)
t_1=beta_1/sqrt(sigma2*w_1)
t_0 > t
t_1 > t
(p_valor_beta_0_1=c(pt(t_0,24),pt(t_1,24)))
(model <- lm((censo$`Renda Média`)~ajuste))
pred <- predict(model)
plot(ajuste,censo$`Renda Média`)
abline(model,col="red",lty = 3)
par(mfrow=c(1,1))
plot(censo$`Renda Média`,pred)
abline(model,col="red",lty = 3)
par(mfrow=c(2,2))
plot(model)
par(mfrow=c(1,1))
plot(censo$`Renda Média`,pred)
abline(model,col="red",lty = 3)
imoveis = read.table("http://www.ime.unicamp.br/~cnaber/imoveis.txt")
names(imoveis)=c("Imposto","Área_terreno","Área_construída","Idade","Preco_venda")
dif <- function(x){
diff(range(x))
}
medias = as.numeric(lapply(imoveis,mean))
se = as.numeric(lapply(imoveis,sd))
quantis = lapply(imoveis,quantile)
ampli = lapply(imoveis,dif)
(estats_desc=data.frame(medias,se,quantis,ampli))
x = matrix(data=c(rep(1,27),imoveis$Imposto,imoveis$Área_terreno,imoveis$Área_construída,imoveis$Idade),nrow=27,ncol=5)
dif <- function(x){
diff(range(x))
}
medias = as.numeric(lapply(imoveis,mean))
se = as.numeric(lapply(imoveis,sd))
quantis = lapply(imoveis,quantile)
ampli = lapply(imoveis,dif)
(estats_desc=data.frame(medias,se,quantis,ampli))
x = matrix(data=c(rep(1,27),imoveis$Imposto,imoveis$Área_terreno,imoveis$Área_construída,imoveis$Idade),nrow=27,ncol=5)
imoveis$Área_terreno
x
imoveis
library(MASS)
x = matrix(data=c(rep(1,27),imoveis$Imposto,imoveis$Área_terreno,imoveis$Área_construída,imoveis$Idade),nrow=27,ncol=5)
psi = ginv(t(x)%*%x)
beta=ginv(t(x)%*%x)%*%t(x)%*%imoveis$Preco_venda
identidade=diag((nrow(imoveis)))
sigma2 = (1/(nrow(imoveis)-4))*(t(imoveis$Preco_venda)%*%(identidade-x%*%ginv(t(x)%*%x)%*%t(x))%*%imoveis$Preco_venda)
t = qt(0.975,(nrow(imoveis)-4))
ic = function(beta,x){
psi = ginv(t(x)%*%x)
ics= numeric(2*nrow(psi))
j=1
for(i in seq(1,10,2)){
ics[i]=beta[j]-1*t*sqrt(sigma2*psi[j,j])
ics[i+1]=beta[j]+1*t*sqrt(sigma2*psi[j,j])
j=j+1
}
return(ics)
}
teste = function(beta){
ts= numeric(nrow(psi))
for(i in 1:nrow(psi)){
ts[i]=beta/sqrt(as.numeric(sigma2*(psi[i,i])))
}
return(ts)
}
tes = teste(beta)
tes < t
(modelo <- lm(Preco_venda~Imposto+Área_terreno+Área_construída+Idade,data=imoveis))
pred = predict(modelo)
plot(imoveis$Preco_venda,pred)
abline(modelo,col="red")
envelnorm<-function(fit.model){
# fit.model: objeto com o ajuste do modelo normal linear homocedástico
# obtido através da função "lm"
#par(mfrow=c(1,1))
X <- model.matrix(fit.model)
n <- nrow(X)
p <- ncol(X)
H <- X%*%solve(t(X)%*%X)%*%t(X)
h <- diag(H)
si <- lm.influence(fit.model)$sigma
r <- resid(fit.model)
tsi <- r/(si*sqrt(1-h))
#
ident <- diag(n)
epsilon <- matrix(0,n,100)
e <- matrix(0,n,100)
e1 <- numeric(n)
e2 <- numeric(n)
#
for(i in 1:100){
epsilon[,i] <- rnorm(n,0,1)
e[,i] <- (ident - H)%*%epsilon[,i]
u <- diag(ident - H)
e[,i] <- e[,i]/sqrt(u)
e[,i] <- sort(e[,i]) }
#
for(i in 1:n){
eo <- sort(e[i,])
e1[i] <- (eo[2]+eo[3])/2
e2[i] <- (eo[97]+eo[98])/2 }
#
med <- apply(e,1,mean)
faixa <- range(tsi,e1,e2)
#
#par(pty="s")
qqnorm(tsi,xlab="Percentil da N(0,1)",
ylab="Residuo Studentizado", ylim=faixa, pch=16, main="",cex=1.1,cex.axis=1.1,cex.lab=1.1)
par(new=T)
qqnorm(e1,axes=F,xlab="",ylab="",type="l",ylim=faixa,lty=1, main="")
par(new=T)
qqnorm(e2,axes=F,xlab="",ylab="", type="l",ylim=faixa,lty=1, main="")
par(new=T)
qqnorm(med,axes=F,xlab="",ylab="",type="l",ylim=faixa,lty=2, main="")
#------------------------------------------------------------#
}
diagnorm<-function(fit.model){
# fit.model: objeto com o ajuste do modelo normal linear homocedástico
# obtido através da função "lm"
par(mfrow=c(2,2))
X <- model.matrix(fit.model)
n <- nrow(X)
p <- ncol(X)
H <- X%*%solve(t(X)%*%X)%*%t(X)
h <- diag(H)
lms <- summary(fit.model)
s <- lms$sigma
r <- resid(lms)
ts <- r/(s*sqrt(1-h))
di <- (1/p)*(h/(1-h))*(ts^2)
si <- lm.influence(fit.model)$sigma
tsi <- r/(si*sqrt(1-h))
a <- max(tsi)
b <- min(tsi)
par(mfrow=c(2,2))
#
plot(tsi,xlab="Índice", ylab="Resíduo Studentizado",
ylim=c(b-1,a+1), pch=16,cex=1.1,cex.axis=1.1,cex.lab=1.1)
abline(2,0,lty=2)
abline(-2,0,lty=2)
abline(0,0,lty=2)
#identify(tsi, n=1)
#title(sub="(c)")
#
plot(fitted(fit.model),tsi,xlab="Valores Ajustados",
ylab="Resíduo Studentizado", ylim=c(b-1,a+1), pch=16,cex=1.1,cex.axis=1.1,cex.lab=1.1)
#
abline(2,0,lty=2)
abline(-2,0,lty=2)
abline(0,0,lty=2)
#boxplot(tsi,ylab="Resíduo Studentizado",cex=1.1,cex.axis=1.1,cex.lab=1.1)
hist(tsi,xlab="Resíduo Studentizado",ylab="densidade",probability=TRUE,main="",cex=1.1,cex.axis=1.1,cex.lab=1.1)
#title(sub="(d)")
#identify(fitted(fit.model),tsi, n=1)
#
ident <- diag(n)
epsilon <- matrix(0,n,100)
e <- matrix(0,n,100)
e1 <- numeric(n)
e2 <- numeric(n)
#
for(i in 1:100){
epsilon[,i] <- rnorm(n,0,1)
e[,i] <- (ident - H)%*%epsilon[,i]
u <- diag(ident - H)
e[,i] <- e[,i]/sqrt(u)
e[,i] <- sort(e[,i]) }
#
for(i in 1:n){
eo <- sort(e[i,])
e1[i] <- (eo[2]+eo[3])/2
e2[i] <- (eo[97]+eo[98])/2 }
#
med <- apply(e,1,mean)
faixa <- range(tsi,e1,e2)
#
#par(pty="s")
qqnorm(tsi,xlab="Percentil da N(0,1)",
ylab="Resíduo Studentizado", ylim=faixa, pch=16, main="",cex=1.1,cex.axis=1.1,cex.lab=1.1)
par(new=T)
qqnorm(e1,axes=F,xlab="",ylab="",type="l",ylim=faixa,lty=1, main="")
par(new=T)
qqnorm(e2,axes=F,xlab="",ylab="", type="l",ylim=faixa,lty=1, main="")
par(new=T)
qqnorm(med,axes=F,xlab="",ylab="",type="l",ylim=faixa,lty=2, main="")
#---------------------------------------------------------------#
}
# fit.model: saída do modelo ajustado
# m.C: matriz C relativa às hipóteses de interesse
testeF.CB <- function(fit.model,m.C)
{
v.beta <-  cbind(fit.model$coef) # vetor com a estimativa dos parâmetros
n <- nrow(model.matrix(fit.model)) # número de observações
e.p <- nrow(v.beta) # número de parâmetros
e.q <- nrow(m.C)  # número de linhas da matriz C
m.cov.beta <- (vcov(fit.model)) # matriz de covariâncias dos parâmetros do modelo
# Estatística do Teste
e.F <- t(m.C%*%v.beta)%*%solve(m.C%*%m.cov.beta%*%t(m.C))%*%(m.C%*%v.beta)/e.q
e.pvalor <- 1-pf(e.F,e.q,n-e.p) # p-0valor
cat("Estatistica F = ",round(e.F,2),"\n")
cat("pvalor = ",round(e.pvalor,4),"\n")
cat("Matriz C :","\n")
print(m.C)
}
# fit.model: saída do modelo ajustado
# m.C: matriz C relativa às hipóteses de interesse
#m.M : matriz M relativa às hipóteses de interesse
testeF.CBM <- function(fit.model,m.C,m.M)
{
v.beta <-  cbind(fit.model$coef) # vetor com a estimativa dos parâmetros
n <- nrow(model.matrix(fit.model)) # número de observações
e.p <- nrow(v.beta) # número de parâmetros
e.q <- nrow(m.C)  # número de linhas da matriz C
m.cov.beta <- (vcov(fit.model)) # matriz de covariâncias dos parâmetros do modelo
# Estatística do teste
e.F <- t(m.C%*%v.beta-m.M)%*%solve(m.C%*%m.cov.beta%*%t(m.C))%*%(m.C%*%v.beta-m.M)/e.q
e.pvalor <- 1-pf(e.F,e.q,n-e.p) # p-valor
cat("Estatistica F = ",round(e.F,2),"\n")
cat("pvalor = ",round(e.pvalor,4),"\n")
cat("Matriz C :","\n")
print(m.C)
cat("Matriz M :","\n")
print(m.M)
}
#leitura dos dados
censo = read.table("http://www.ime.unicamp.br/~cnaber/censo.txt")
names(censo)=c("Estado","Anos_escolaridade","Renda_media")
plot(censo$Anos_escolaridade,censo$Renda_media,xlab="Anos de escolaridade",ylab="Renda média")
modelo1 = lm(censo$Renda_media~censo$Anos_escolaridade)
summary(modelo1)
diagnorm(modelo1)
a2 = (censo$Anos_escolaridade)^2
modelo2=lm(censo$Renda_media~censo$Anos_escolaridade+a2)
summary(modelo2)
diagnorm(modelo2)
library(printr)
packageVersion("printr")
install.packages("printR")
install.packages(
'printr',
type = 'source',
repos = c('http://yihui.name/xran', 'http://cran.rstudio.com')
)
install.packages(
'printr',
type = 'source',
repos = c('http://yihui.name/xran', 'http://cran.rstudio.com')
)
library(printr)
estat_test =  data.frame(rbind(AIC(modelo1),BIC(modelo1),logLik(modelo1)),rbind(AIC(modelo2),BIC(modelo2),logLik(modelo2)))
rownames(estat_test)=c("AIC","BIC","Log-Verosi")
colnames(estat_test)=c("Modelo1","Modelo2")
estat_test
#leitura dos dados
dados_escova = read.table("http://www.ime.unicamp.br/~cnaber/Singer&Andrade1997.txt")
names(dados_escova)=c("indivíduo","sexo" ,"IPB_pré-escovação_escova_Hugger","IPB_pós-escovação_escova_Hugger","IPB_pré-escovação_escova_tradicional","IPB_pós-escovação_tradicional")
hae <- dados_escova[,3] # IPB pré-escovação: escova Hugger
hde <- dados_escova[,4] # IPB pós-escovação: escova Hugger
cae <- dados_escova[,5] # IPB pré-escovação: escova tradicional
cde <- dados_escova[,6] # IPB pós-escovação: escova tradicional
ipbpre <- c(cae,hae) # IPB pré-escovação
ipbpos <- c(cde,hde) # IPB pós-escovação
tesc <- c(rep("Convencional",26),rep("Hugger",26))# tipo de escova
tescf <- factor(tesc,levels=c("Convencional","Hugger"))
sex <- c(rep("F",14),rep("M",12),rep("F",14),rep("M",12))
sexo = factor(sex,levels=c("F","M"))
sexotescf = interaction(sexo,tescf)
boxplot(dados_escova$`IPB_pré-escovação_escova_Hugger`,dados_escova$sexo)
boxplot(dados_escova$`IPB_pré-escovação_escova_tradicional`,dados_escova$sexo)
par(mfrow=c(1,2))
plot(dados_escova$`IPB_pré-escovação_escova_Hugger`,dados_escova$`IPB_pós-escovação_escova_Hugger`,ylim=c(0,3),xlab="Pré Escovação escova Hugger",ylab="Pós Escovação escova Hugger")
plot(dados_escova$`IPB_pré-escovação_escova_tradicional`,dados_escova$`IPB_pós-escovação_tradicional`,ylim=c(0,3), xlab="Pré Escovação escova Tradicional",ylab="Pós Escovação escova Tradicional")
result_compl <- lm(ipbpos~-1+sexotescf+(ipbpre:sexotescf))
summary(result_compl)
library(printr)
planmatrix = data.frame(model.matrix(result_compl))
names(planmatrix)=c("ConvencionalF","ConvencionalM","HuggerF","HuggerM","ipbpreConvF","ipbpreConvm","ipbpreHuggerF","ipbprehuggerM")
planmatrix
diagnorm(result_compl)
c=t(matrix(c(1,-1,0,0,0,0,0,0,1,0,-1,0,0,0,0,0,1,0,0,-1,0,0,0,0),8,3))
testeF.CB(result_compl,c)
result_s_i <- lm(ipbpos~-1+(ipbpre:sexotescf))
summary(result_s_i)
library(printr)
planmatrix1 = data.frame(model.matrix(result_s_i))
names(planmatrix)=c("ConvencionalF","ConvencionalM","HuggerF","HuggerM","ipbpreConvF","ipbpreConvm","ipbpreHuggerF","ipbprehuggerM")
planmatrix1
diagnorm(result_s_i)
(c=t(matrix(c(1,-1,0,0,1,0,-1,0,1,0,0,-1),4,3)))
testeF.CB(result_s_i,c)
result <- lm(ipbpos~-1+tescf+ipbpre:tescf)
summary(result)
diagnorm(result)
(c=t(matrix(c(1,-1,0,0),4,1)))
testeF.CB(result,c)
result_0 <- lm(ipbpos~-1+ipbpre:tescf)
summary(result_0)
diagnorm(result_0)
(c=t(matrix(c(1,-1),2,1)))
testeF.CB(result_0,c)
ganho=round(((summary(result_0)$coefficients)[2]/(summary(result_0)$coefficients)[1])*100,1)
#leitura dos dados
mydata3 = read.table(choose.files())
names(mydata3)=c("Indivíduo","Grupo","Dia","Antes","Depois")
mydata3$Antes = as.integer(mydata3$Antes)
mydata3$Depois = as.integer(mydata3$Depois)
library(printr)
medias.grupo = aggregate(mydata3$Antes, by=list(mydata3$Grupo),mean)
medias.dia = aggregate(mydata3$Antes, by=list(mydata3$Dia),mean)
medias = data.frame(medias.grupo,medias.dia)
names(medias)=c("Grupo","Media","Dia","Media")
medias
par(mfrow=c(1,2))
boxplot(Antes~factor(Grupo),data=mydata3)
boxplot(Antes~factor(Dia),data=mydata3)
boxplot(Depois~factor(Grupo),data=mydata3)
results = lm((Depois) ~ -1+Grupo + Antes:Grupo, mydata3)
summary(results)
diagnorm(results)
(c=t(matrix(c(1,-1,0,0,0,0,0,0,1,0,-1,0,0,0,0,0,1,0,0,-1,0,0,0,0),8,3)))
testeF.CB(results,c)
results1 = lm((Depois) ~ -1+Antes, mydata3)
summary(results1)
diagnorm(results1)
